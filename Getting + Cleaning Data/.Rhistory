library(datasets)
data(iris)
head(iris)
?lapply
?mapply
mapply(mean, iris$Sepal.Length, iris$Species)
?lapply
?tapply
tappy(iris$Sepal.Length, iris$Species, mean)
tapply(iris$Sepal.Length, iris$Species, mean)
data(mtcars)
tapply(mtcars$hp, mtcars$cyl, avg)
?average
tapply(mtcars$hp, mtcars$cyl, mean)
perfDif <- tapply(mtcars$hp, mtcars$cyl, mean)
abs(perfDif["8"] - perfDif["4"])
?solve
library(httr)
myapp <- oauth_app("github",)
myapp <- oauth_app("github", key = "3cddf4fbcc50598ac21b", secret = "7989df46f28b11be2e7c6e40735506c0114c3b49")
gh_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
library(httpuv)
install.packages("httpuv")
library(httpuv)
gh_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
getwd()
getwd()
setwd()
responses <- read.csv("./../Downloads/Pre-Post Alpha Survey (Responses) - Form Responses 1.csv")
??write
View(responses)
?lapply
output <- c()
c(output, "Hello")
output <- c(output, "Hello")
output <- c(output, "Hello")
phrase <- "This.is.my.cat"
?gsub
gsub(".", " ", phrase)
gsub("/.", " ", phrase)
gsub("\.", " ", phrase)
gsub('\.', " ", phrase)
gsub(".", " ", phrase, fixed = TRUE)
prepResponses <- function(q, r) {
# Google sheets does something stupid with the names of the questions
# have to extract the periods and insert places
fixedQ <- gsub(".", " ", q, fixed = TRUE)
# write the question to the 'file'
output <- c(output, fixedQ)
# write the response
output <- c(output, r)
}
output <- c()
response <- responses[1,]
?sapply
View(response)
questions <- names(responses)
responses <- read.csv("./../Downloads/Pre-Post Alpha Survey (Responses) - Form Responses 1.csv")
responses.m <- as.matrix(responses)
View(responses.m)
?cat
?paste0
colnames(m)
colnames(responses.m)
colnames(response.m) <- gsub(".", " ", colnames(response.m), fixed = TRUE)
colnames(responses.m) <- gsub(".", " ", colnames(responses.m), fixed = TRUE)
colnames(m)
colnames(responses.m)
output <- paste0(colnames(qdata.m), "\n", "-------", "\n", t(responses.m))
output <- paste0(colnames(responses.m), "\n", "-------", "\n", t(responses.m))
cat(ouput, sep="\n\n")
cat(output, sep="\n\n")
cat(output, sep="\n\n", file = "output.txt")
getwd()
install.packages("fetchGoogle")
paste("This", "is", "war", sep="\n")
data <- read.csv("./../Downloads/Pre-Post Alpha Survey (Responses) - Form Responses 1.csv")
data <- as.matrix(data)
View(data)
dataByRow <- paste(colnames(data), "------", t(data), sep="\n")
??g
?gsub
colnames(data) <- gsub(".", " ", colnames(data), fixed = TRUE)
View(data)
data <- as.matrix(read.csv("./../Downloads/Pre and Post Award Status Tracking Journal Entry  (Responses) - Form Responses 1.csv"))
colnames(data) <- gsub(".", " ", colnames(data), fixed = TRUE)
dataByRow <- paste(colnames(data), "------", t(data), sep="\n")
?cat
cat(dataByRow, "/diaries.txt", "\n\n")
getwd()
cat(dataByRow, "diaries.txt", "\n\n")
cat(dataByRow, file = "diaries.txt", sep = "\n\n")
data <- as.matrix(read.csv("./../Downloads/Pre and Post Award Status Tracking Journal Entry  (Responses) - Form Responses 1.csv"))
View(data)
qs <- colnames(data)
datat <- t(data)
View(datat)
?cat
?paste
length()
length(colnames(data))
?cat
apply(data, 1, x)
apply(data, 1, print(x))
apply(data, 1, print)
?apply
nrow(data)
paste(colnames(data), "------", data[1,], sep = "\n")
?paste0
source('~/GitHub/response-extraction/extractResponses.R')
extractResponses("diary", getwd(), "./../Downloads/Pre and Post Award Status Tracking Journal Entry  (Responses) - Form Responses 1.csv")
source('~/GitHub/response-extraction/extractResponses.R')
debugSource('~/GitHub/response-extraction/extractResponses.R')
extractResponses("diary", getwd(), "./../Downloads/Pre and Post Award Status Tracking Journal Entry  (Responses) - Form Responses 1.csv")
debugSource('~/GitHub/response-extraction/extractResponses.R')
extractResponses("diary", getwd(), "./../Downloads/Pre and Post Award Status Tracking Journal Entry  (Responses) - Form Responses 1.csv")
debugSource('~/GitHub/response-extraction/extractResponses.R')
source('~/GitHub/response-extraction/extractResponses.R')
extractResponses("diary", getwd(), "./../Downloads/Pre and Post Award Status Tracking Journal Entry  (Responses) - Form Responses 1.csv")
debugSource('~/GitHub/response-extraction/extractResponses.R')
extractResponses("diary", getwd(), "./../Downloads/Pre and Post Award Status Tracking Journal Entry  (Responses) - Form Responses 1.csv")
source('~/GitHub/response-extraction/extractResponses.R')
[1:nrow(data)]
g < [0:1]
g <- [0:1]
1:nrow(data)
source('~/GitHub/response-extraction/extractResponses.R')
extractResponses("diary", getwd(), "./../Downloads/Pre and Post Award Status Tracking Journal Entry  (Responses) - Form Responses 1.csv")
list1 <- c(1, 2, 3, 4)
list2 <- list1
list1 + list2
list3 <- c(10,20)
list1 + list3
data <- as.matrix(read.csv("./../Downloads/Pre and Post Award Status Tracking Journal Entry  (Responses) - Form Responses 1.csv"))
View(data)
extractResponses("diary", getwd(), "./../Downloads/Pre and Post Award Status Tracking Journal Entry  (Responses) - Form Responses 1.csv")
source('~/GitHub/response-extraction/extractResponses.R')
extractResponses("diary", getwd(), "./../Downloads/Pre and Post Award Status Tracking Journal Entry  (Responses) - Form Responses 1.csv")
colnames(data)
extractResponses("mrtt", getwd(), "./../Downloads/MyResearch Training Transcript Beta User Feedback Survey (Responses) - Form Responses 1.csv")
source('~/GitHub/response-extraction/extractResponses.R')
?download.file
getwd()
setwd("./GitHub//datasciencecoursera/Getting + Cleaning Data/")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv","2006housingData.csv")
q1data <- read.csv("2006housingData.csv")
count(q1data[q1data$VAL == 24]
)
length(q1data[q1data$VAL == 24])
length(q1data[q1data$VAL == 24,])
(q1data[q1data$VAL == 24,]
)
q1data <- read.csv("2006housingData.csv", na.omit = T)
q1data <- [!rowSums(is.na(q1data[VAL])), ]
q1data <- q1data[!rowSums(is.na(q1data[VAL])), ]
q1data <- q1data[!rowSums(is.na(q1data$VAL)), ]
length(q1data[!is.na(q1data$VAL),])
View(`q1data`)
rnum(q1data[!is.na(q1data$VAL),])
nrows(q1data[!is.na(q1data$VAL),])
nrow(q1data[!is.na(q1data$VAL),])
nrow(q1data[!is.na(q1data$VAL) && q1data$VAL == 24],)
nrow(q1data[!is.na(q1data$VAL) && q1data$VAL == 24,])
nrow(q1data[q1data$VAL == 24,])
nrow(q1data[!is.na(q1data$VAL) & q1data$VAL == 24,])
library(XML)
xmlFile <- xmlTreeParse("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml")
xmlFile <- xmlTreeParse("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml", isURL = T)
xmlFileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
xmlFile <- xmlTreeParse(xmlFileURL, useInternal=T)
xmlFileURL <- "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
xmlFile <- xmlTreeParse(xmlFileURL, useInternal=T)
rootNode <- xmlRoot(xmlFile)
rootNode
xmlResult <- xpathSApply(rootNode, "//row[zipcode=21231]", xmlValue)
